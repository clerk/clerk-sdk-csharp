//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Clerk.BackendAPI.Models.Components
{
    using Clerk.BackendAPI.Models.Components;
    using Clerk.BackendAPI.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    
    public class ExternalAccountWithVerification
    {

        /// <summary>
        /// String representing the object&apos;s type. Objects of the same type share the same value.
        /// </summary>
        [JsonProperty("object")]
        public ExternalAccountWithVerificationObject Object { get; set; } = default!;

        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        [JsonProperty("provider")]
        public string Provider { get; set; } = default!;

        [JsonProperty("identification_id")]
        public string IdentificationId { get; set; } = default!;

        /// <summary>
        /// The unique ID of the user in the external provider&apos;s system
        /// </summary>
        [JsonProperty("provider_user_id")]
        public string ProviderUserId { get; set; } = default!;

        [JsonProperty("approved_scopes")]
        public string ApprovedScopes { get; set; } = default!;

        [JsonProperty("email_address")]
        public string EmailAddress { get; set; } = default!;

        [JsonProperty("first_name")]
        public string FirstName { get; set; } = default!;

        [JsonProperty("last_name")]
        public string LastName { get; set; } = default!;

        /// <summary>
        /// Please use `image_url` instead
        /// </summary>
        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("avatar_url")]
        public string? AvatarUrl { get; set; }

        [JsonProperty("image_url")]
        public string? ImageUrl { get; set; } = null;

        [JsonProperty("username")]
        public string? Username { get; set; } = null;

        [JsonProperty("phone_number")]
        public string? PhoneNumber { get; set; } = null;

        [JsonProperty("public_metadata")]
        public Dictionary<string, object> PublicMetadata { get; set; } = default!;

        [JsonProperty("label")]
        public string? Label { get; set; } = null;

        /// <summary>
        /// Unix timestamp of creation<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("created_at")]
        public long CreatedAt { get; set; } = default!;

        /// <summary>
        /// Unix timestamp of creation<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("updated_at")]
        public long UpdatedAt { get; set; } = default!;

        [JsonProperty("verification", NullValueHandling = NullValueHandling.Include)]
        public ExternalAccountWithVerificationVerification? Verification { get; set; }

        public Oauth? GetVerificationVerificationOauth()
        {
            return Verification != null ? Verification.Oauth : null;
        }

        public GoogleOneTap? GetVerificationVerificationGoogleOneTap()
        {
            return Verification != null ? Verification.GoogleOneTap : null;
        }

        [JsonProperty("additionalProperties")]
        public Dictionary<string, object>? AdditionalProperties { get; set; }
    }
}