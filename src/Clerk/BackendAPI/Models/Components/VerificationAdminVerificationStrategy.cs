//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Clerk.BackendAPI.Models.Components
{
    using Clerk.BackendAPI.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    [JsonConverter(typeof(OpenEnumConverter))]
    public class VerificationAdminVerificationStrategy : IEquatable<VerificationAdminVerificationStrategy>
    {
        public static readonly VerificationAdminVerificationStrategy Admin = new VerificationAdminVerificationStrategy("admin");

        private static readonly Dictionary <string, VerificationAdminVerificationStrategy> _knownValues =
            new Dictionary <string, VerificationAdminVerificationStrategy> ()
            {
                ["admin"] = Admin
            };

        private static readonly ConcurrentDictionary<string, VerificationAdminVerificationStrategy> _values =
            new ConcurrentDictionary<string, VerificationAdminVerificationStrategy>(_knownValues);

        private VerificationAdminVerificationStrategy(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static VerificationAdminVerificationStrategy Of(string value)
        {
            return _values.GetOrAdd(value, _ => new VerificationAdminVerificationStrategy(value));
        }

        public static implicit operator VerificationAdminVerificationStrategy(string value) => Of(value);
        public static implicit operator string(VerificationAdminVerificationStrategy verificationadminverificationstrategy) => verificationadminverificationstrategy.Value;

        public static VerificationAdminVerificationStrategy[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as VerificationAdminVerificationStrategy);

        public bool Equals(VerificationAdminVerificationStrategy? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}