//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Clerk.BackendAPI.Models.Components
{
    using Clerk.BackendAPI.Models.Components;
    using Clerk.BackendAPI.Utils;
    using Newtonsoft.Json;
    
    public class CommerceSubscriptionItem
    {

        /// <summary>
        /// String representing the object&apos;s type. Objects of the same type share the same value.
        /// </summary>
        [JsonProperty("object")]
        public CommerceSubscriptionItemObject Object { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the subscription item.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the Clerk instance.
        /// </summary>
        [JsonProperty("instance_id")]
        public string InstanceId { get; set; } = default!;

        /// <summary>
        /// Current status of the subscription item.
        /// </summary>
        [JsonProperty("status")]
        public CommerceSubscriptionItemStatus Status { get; set; } = default!;

        /// <summary>
        /// Credit information (only available in PaymentAttempt events).
        /// </summary>
        [JsonProperty("credit")]
        public Credit? Credit { get; set; } = null;

        /// <summary>
        /// Unique identifier for the associated plan.
        /// </summary>
        [JsonProperty("plan_id")]
        public string PlanId { get; set; } = default!;

        /// <summary>
        /// The associated commerce plan.
        /// </summary>
        [JsonProperty("plan", NullValueHandling = NullValueHandling.Include)]
        public Plan? Plan { get; set; }

        /// <summary>
        /// The billing period for this subscription.
        /// </summary>
        [JsonProperty("plan_period")]
        public PlanPeriod PlanPeriod { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the payment source.
        /// </summary>
        [JsonProperty("payment_source_id")]
        public string PaymentSourceId { get; set; } = default!;

        /// <summary>
        /// The payment source associated with this subscription.
        /// </summary>
        [JsonProperty("payment_source")]
        public PaymentSource? PaymentSource { get; set; } = null;

        /// <summary>
        /// Total amount paid over the lifetime of this subscription.
        /// </summary>
        [JsonProperty("lifetime_paid")]
        public LifetimePaid? LifetimePaid { get; set; } = null;

        /// <summary>
        /// Current amount for this subscription.
        /// </summary>
        [JsonProperty("amount")]
        public Amount? Amount { get; set; } = null;

        /// <summary>
        /// Information about the next invoice.
        /// </summary>
        [JsonProperty("next_invoice")]
        public NextInvoice? NextInvoice { get; set; } = null;

        /// <summary>
        /// Information about the next payment.
        /// </summary>
        [JsonProperty("next_payment")]
        public NextPayment? NextPayment { get; set; } = null;

        /// <summary>
        /// Unique identifier for the payer.
        /// </summary>
        [JsonProperty("payer_id")]
        public string PayerId { get; set; } = default!;

        /// <summary>
        /// The payer associated with this subscription.
        /// </summary>
        [JsonProperty("payer")]
        public Payer? Payer { get; set; } = null;

        /// <summary>
        /// Whether this subscription is currently on a free trial.
        /// </summary>
        [JsonProperty("is_free_trial")]
        public bool IsFreeTrial { get; set; } = default!;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the current period started.
        /// </summary>
        [JsonProperty("period_start")]
        public long? PeriodStart { get; set; } = null;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the current period ends.
        /// </summary>
        [JsonProperty("period_end")]
        public long? PeriodEnd { get; set; } = null;

        /// <summary>
        /// Date used for proration calculations.
        /// </summary>
        [JsonProperty("proration_date")]
        public string ProrationDate { get; set; } = default!;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the subscription was canceled.
        /// </summary>
        [JsonProperty("canceled_at")]
        public long? CanceledAt { get; set; } = null;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the subscription became past due.
        /// </summary>
        [JsonProperty("past_due_at")]
        public long? PastDueAt { get; set; } = null;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the subscription ended.
        /// </summary>
        [JsonProperty("ended_at")]
        public long? EndedAt { get; set; } = null;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the subscription was created.
        /// </summary>
        [JsonProperty("created_at")]
        public long CreatedAt { get; set; } = default!;

        /// <summary>
        /// Unix timestamp (in milliseconds) when the subscription was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public long UpdatedAt { get; set; } = default!;
    }
}